version: 2.0
jobs:

  test:
    # TODO: Remove
    environment:
      CIRCLE_TAG: 0.3.8
    working_directory: ~/repo
    docker:
      - image: circleci/python:3.7.0
    steps:
      - checkout
      - run:
          name: Run tests and flake8 using tox
          command: |
            sudo pip install tox
            tox
      - run:
          name: Upload coverage data to codecov
          command: bash <(curl -s https://codecov.io/bash)

  release_pypi:
    # TODO: Remove
    environment:
      CIRCLE_TAG: 0.3.8
    docker:
      - image: circleci/python:3.7.0
    steps:
      - checkout
      - run:
          name: Build source distribution
          command: python setup.py sdist
      - run:
          name: Upload to PyPI
          command: |
            sudo pip install twine
#            twine upload dist/asyncy-*.tar.gz

  release_brew:
    # TODO: Remove
    environment:
      CIRCLE_TAG: 0.3.8
    macos:
      xcode: "9.0"
    steps:
      - add_ssh_keys:
          fingerprints:
            - "8e:2f:db:cd:a7:a4:38:ca:c1:c3:8f:ef:fc:27:4a:93"
      - run:
          name: Install or re-link brew
          command: |
            if [ -d /usr/local/Cellar ]; then
              for i in `ls /usr/local/Cellar/`; do echo "Re-linking $i"; brew link --force $i; done
            else
              /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
            fi
      - run:
          name: Upgrade Python
          command: brew upgrade python || echo "Python is already installed"
      - run:
          name: Install virtualenv
          command: pip3 install virtualenv
      - checkout
      - run:
          name: Change git name
          command: git config --global user.name "Asyncy Infrastructure"
      - run:
          name: Change git email
          command: git config --global user.email infra@asyncy.com
      - run:
          name: create brew pr
          command: bash ./scripts/update_brew.sh $CIRCLE_TAG

  release_snap:
    # TODO: Remove
    environment:
      CIRCLE_TAG: 0.3.8
    # Building and testing a snap can be tricky as snapd can't run inside a
    # container. To able to run and test our build snap, we need to use a
    # `machine` executor, we use edge as of time of writing that is the only
    # version on which we got it to work.
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      - run:
          name: Create snapcraft.yaml
          command: |
            echo "
            name: asyncy
            version: $CIRCLE_TAG
            summary: Asyncy CLI
            description: Asyncy CLI
            grade: devel
            confinement: strict
            base: core18

            apps:
              asyncy:
                command: bin/asyncy
                environment:
                  LANG: C.UTF-8
                  LC_ALL: C.UTF-8

            parts:
              asyncy:
                plugin: python
                python-version: python3
                python-packages:
                - asyncy==$CIRCLE_TAG
            " > snapcraft.yaml
      - run:
          name: Build snap
          # The machine executor runs a version of ubuntu that doesn't have the
          # snapcraft readily available. The docs of CircleCI suggest to run
          # from inside a standard container.
          # https://circleci.com/blog/build-test-publish-snap-packages/
          command: >
            docker run
              -t ubuntu:18.04
              -v $(pwd):$(pwd)
              sh -c "
                apt update -qq &&
                apt install snapcraft -y &&
                cd $(pwd) &&
                snapcraft
              "
      - run:
          name: Install snapd
          # Even tough our build snap explicitly depends on core18, after
          # intalling it, snap complains about not being able to find it, so we
          # install them here manually.
          command: |
            sudo apt install -y snapd
            sudo snap install core
            sudo snap install core18
      - run:
          name: Install the freshly build snap
          command: >
            sudo snap install asyncy_${CIRCLE_TAG}_amd64.snap
              --dangerous
              --devmode
      - run:
          name: Verify the installed snap version
          # /snap/bin isn't on $PATH here, so we specify the absolute path
          command: /snap/bin/asyncy version | grep "Asyncy ${CIRCLE_TAG}"
      # - run:
      #     name: Release snap
      #     # Just as during the build of the snap, we run snapcraft inside a
      #     # container as well.
      #     command: >
      #       docker run
      #         -t ubuntu:18.04
      #         -v $(pwd):$(pwd)
      #         sh -c "
      #           apt update -qq &&
      #           apt install snapcraft -y &&
      #           echo $SNAPCRAFT_LOGIN | snapcraft login --with - &&
      #           snapcraft push --release edge asyncy_${CIRCLE_TAG}_amd64.snap

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
      - release_pypi:
          requires:
            - test
          # filters:
          #   tags:
          #     only: /^[0-9]+\.[0-9]+\.[0-9]+$/
          #   branches:
          #     ignore: /.*/
      - release_snap:
          requires:
            - release_pypi
          # filters:
          #   tags:
          #     only: /^[0-9]+\.[0-9]+\.[0-9]+$/
          #   branches:
          #     ignore: /.*/
      - release_brew:
          requires:
            - release_pypi
          # filters:
          #   tags:
          #     only: /^[0-9]+\.[0-9]+\.[0-9]+$/
          #   branches:
          #     ignore: /.*/
